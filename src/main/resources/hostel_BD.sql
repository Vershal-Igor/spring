-- MySQL Script generated by MySQL Workbench
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema Hostel
-- -----------------------------------------------------
-- Hostel system. The client fills in the Request for booking or for complete payment specifying necessary number of places. The administrator confirms (rejects) the arrived Request, does discounts to regular customers, puts a ban to the clients who violated rules of system.

-- -----------------------------------------------------
-- Schema Hostel
--
-- Hostel system. The client fills in the Request for booking or for complete payment specifying necessary number of places. The administrator confirms (rejects) the arrived Request, does discounts to regular customers, puts a ban to the clients who violated rules of system.
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `Hostel` DEFAULT CHARACTER SET utf8 ;
USE `Hostel` ;

-- -----------------------------------------------------
-- Table `Hostel`.`User`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Hostel`.`User` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `role` BIT(1) NOT NULL DEFAULT 1 COMMENT 'Shows role( 1 - User , 0 - Admin)',
  `name` VARCHAR(45) NOT NULL COMMENT 'Client\'s name',
  `surname` VARCHAR(45) NOT NULL COMMENT 'Client\'s surname',
  `login` VARCHAR(45) NOT NULL,
  `password` VARCHAR(45) NOT NULL,
  `status` TINYINT(1) NULL DEFAULT NULL COMMENT '0 - the user is banned. If client wasn\'t banned field value is NULL',
  PRIMARY KEY (`id`),
  UNIQUE INDEX `login_UNIQUE` (`login` ASC))
ENGINE = InnoDB
COMMENT = 'Client Table. It represents the client entity. The client has a role (user or admin), name, offer, as well as banned attribute (banned or not).';


-- -----------------------------------------------------
-- Table `Hostel`.`Room`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Hostel`.`Room` (
  `id` TINYINT(3) UNSIGNED NOT NULL AUTO_INCREMENT COMMENT 'Each room is unique.I think that\'s enough 255 hostel rooms',
  `room_places` TINYINT(3) UNSIGNED NOT NULL COMMENT 'Shows how many places in the room',
  `price` DECIMAL(4) UNSIGNED NOT NULL COMMENT 'It shows the cost of the room, use decimal.',
  `room_number` TINYINT(3) UNSIGNED NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB
COMMENT = 'Table room. The room has a number of places and price.';


-- -----------------------------------------------------
-- Table `Hostel`.`Order`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Hostel`.`Order` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `arrival_date` DATE NOT NULL COMMENT 'It shows the client arrival date',
  `depature_date` DATE NOT NULL COMMENT 'It shows the client departure date',
  `places_amount` TINYINT(3) UNSIGNED NOT NULL COMMENT 'It shows the number of visitors',
  `pay_type` TINYINT(1) NOT NULL COMMENT 'It shows the type of payment(1 - booking ; 0 - complete payment)',
  `discount` DECIMAL(2) NULL,
  `status` TINYINT(1) NULL DEFAULT NULL COMMENT 'It shows order status ( 1 - confirmed ,r 0 - (not confirmed) rejected, 2 - archived). If the application is on the processing status (new status) field has a NULL value.',
  `User_id` INT UNSIGNED NOT NULL COMMENT 'Shows client ID',
  `Room_id` TINYINT(3) UNSIGNED NOT NULL,
  `approver_id` INT NULL DEFAULT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_Application_Client1_idx` (`User_id` ASC),
  INDEX `fk_Order_Room1_idx` (`Room_id` ASC),
  CONSTRAINT `fk_Application_Client1`
    FOREIGN KEY (`User_id`)
    REFERENCES `Hostel`.`User` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_Order_Room1`
    FOREIGN KEY (`Room_id`)
    REFERENCES `Hostel`.`Room` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB
COMMENT = 'Table application. The application consists of the arrival date, departure date, number of places required, type of payment (complete payment of booking), as well as  the confirmed field (confirmed or not confirmed(rejected)) . ';


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;

-- -----------------------------------------------------
-- Data for table `Hostel`.`User`
-- -----------------------------------------------------
START TRANSACTION;
USE `Hostel`;
INSERT INTO `Hostel`.`User` (`id`, `role`, `name`, `surname`, `login`, `password`, `status`) VALUES (1, 0, 'Админ', 'Админ', 'админ', md5('админ'), NULL);
INSERT INTO `Hostel`.`User` (`id`, `role`, `name`, `surname`, `login`, `password`, `status`) VALUES (2, 1, 'Иван', 'Петров', 'петров_ваня', md5('123'), NULL);
INSERT INTO `Hostel`.`User` (`id`, `role`, `name`, `surname`, `login`, `password`, `status`) VALUES (3, 1, 'Андрей', 'Серов', 'серов_андр', md5('серо4'), NULL);
INSERT INTO `Hostel`.`User` (`id`, `role`, `name`, `surname`, `login`, `password`, `status`) VALUES (4, 1, 'Виктор', 'Соболев', 'соболев_витя', md5('соболе4вит9'), NULL);
INSERT INTO `Hostel`.`User` (`id`, `role`, `name`, `surname`, `login`, `password`, `status`) VALUES (5, 1, 'Дмитрий', 'Аверин', 'дима_авер', md5('д1ман'), NULL);
INSERT INTO `Hostel`.`User` (`id`, `role`, `name`, `surname`, `login`, `password`, `status`) VALUES (6, 1, 'Ольга', 'Токарева', 'оля_ток', md5('ол9токаре4а'), 0);
INSERT INTO `Hostel`.`User` (`id`, `role`, `name`, `surname`, `login`, `password`, `status`) VALUES (7, 1, 'Петр', 'Демидов', 'петя_демид', md5('демидо4'), NULL);
INSERT INTO `Hostel`.`User` (`id`, `role`, `name`, `surname`, `login`, `password`, `status`) VALUES (8, 1, 'Екатерина', 'Власова', 'катя_влас', md5('кат9влас'), NULL);

COMMIT;


-- -----------------------------------------------------
-- Data for table `Hostel`.`Room`
-- -----------------------------------------------------
START TRANSACTION;
USE `Hostel`;
INSERT INTO `Hostel`.`Room` (`id`, `room_places`, `price`, `room_number`) VALUES (1, 2, 5, 1);
INSERT INTO `Hostel`.`Room` (`id`, `room_places`, `price`, `room_number`) VALUES (2, 2, 5, 2);
INSERT INTO `Hostel`.`Room` (`id`, `room_places`, `price`, `room_number`) VALUES (3, 3, 10, 3);
INSERT INTO `Hostel`.`Room` (`id`, `room_places`, `price`, `room_number`) VALUES (4, 3, 10, 4);
INSERT INTO `Hostel`.`Room` (`id`, `room_places`, `price`, `room_number`) VALUES (5, 4, 15, 5);
INSERT INTO `Hostel`.`Room` (`id`, `room_places`, `price`, `room_number`) VALUES (6, 5, 20, 6);
INSERT INTO `Hostel`.`Room` (`id`, `room_places`, `price`, `room_number`) VALUES (7, 6, 25, 7);

COMMIT;


-- -----------------------------------------------------
-- Data for table `Hostel`.`Order`
-- -----------------------------------------------------
START TRANSACTION;
USE `Hostel`;
INSERT INTO `Hostel`.`Order` (`id`, `arrival_date`, `depature_date`, `places_amount`, `pay_type`, `discount`, `status`, `User_id`, `Room_id`, `approver_id`) VALUES (1, '22.02.2017', '24.02.2017', 2, 0, NULL, 1, 2, DEFAULT, NULL);
INSERT INTO `Hostel`.`Order` (`id`, `arrival_date`, `depature_date`, `places_amount`, `pay_type`, `discount`, `status`, `User_id`, `Room_id`, `approver_id`) VALUES (2, '24.02.2017', '26.02.2017', 2, 1, NULL, 1, 3, DEFAULT, NULL);
INSERT INTO `Hostel`.`Order` (`id`, `arrival_date`, `depature_date`, `places_amount`, `pay_type`, `discount`, `status`, `User_id`, `Room_id`, `approver_id`) VALUES (3, '24.02.2017', '27.02.2017', 3, 1, NULL, 0, 4, DEFAULT, NULL);
INSERT INTO `Hostel`.`Order` (`id`, `arrival_date`, `depature_date`, `places_amount`, `pay_type`, `discount`, `status`, `User_id`, `Room_id`, `approver_id`) VALUES (4, '25.02.2017', '28.02.2017', 3, 0, NULL, 1, 5, DEFAULT, NULL);
INSERT INTO `Hostel`.`Order` (`id`, `arrival_date`, `depature_date`, `places_amount`, `pay_type`, `discount`, `status`, `User_id`, `Room_id`, `approver_id`) VALUES (5, '01.03.2017', '03.03.2017', 4, 1, NULL, NULL, 6, DEFAULT, NULL);
INSERT INTO `Hostel`.`Order` (`id`, `arrival_date`, `depature_date`, `places_amount`, `pay_type`, `discount`, `status`, `User_id`, `Room_id`, `approver_id`) VALUES (6, '04.03.2017', '05.03.2017', 5, 1, NULL, 0, 7, DEFAULT, NULL);
INSERT INTO `Hostel`.`Order` (`id`, `arrival_date`, `depature_date`, `places_amount`, `pay_type`, `discount`, `status`, `User_id`, `Room_id`, `approver_id`) VALUES (7, '04.03.2017', '06.03.2017', 6, 0, NULL, NULL, 8, DEFAULT, NULL);

COMMIT;
